/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  KnowledgeBaseArticle as PrismaKnowledgeBaseArticle,
} from "@prisma/client";

export class KnowledgeBaseArticleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.KnowledgeBaseArticleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.knowledgeBaseArticle.count(args);
  }

  async knowledgeBaseArticles(
    args: Prisma.KnowledgeBaseArticleFindManyArgs
  ): Promise<PrismaKnowledgeBaseArticle[]> {
    return this.prisma.knowledgeBaseArticle.findMany(args);
  }
  async knowledgeBaseArticle(
    args: Prisma.KnowledgeBaseArticleFindUniqueArgs
  ): Promise<PrismaKnowledgeBaseArticle | null> {
    return this.prisma.knowledgeBaseArticle.findUnique(args);
  }
  async createKnowledgeBaseArticle(
    args: Prisma.KnowledgeBaseArticleCreateArgs
  ): Promise<PrismaKnowledgeBaseArticle> {
    return this.prisma.knowledgeBaseArticle.create(args);
  }
  async updateKnowledgeBaseArticle(
    args: Prisma.KnowledgeBaseArticleUpdateArgs
  ): Promise<PrismaKnowledgeBaseArticle> {
    return this.prisma.knowledgeBaseArticle.update(args);
  }
  async deleteKnowledgeBaseArticle(
    args: Prisma.KnowledgeBaseArticleDeleteArgs
  ): Promise<PrismaKnowledgeBaseArticle> {
    return this.prisma.knowledgeBaseArticle.delete(args);
  }
}
