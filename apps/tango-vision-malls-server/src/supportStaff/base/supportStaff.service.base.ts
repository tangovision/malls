/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SupportStaff as PrismaSupportStaff } from "@prisma/client";

export class SupportStaffServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SupportStaffCountArgs, "select">
  ): Promise<number> {
    return this.prisma.supportStaff.count(args);
  }

  async supportStaffs(
    args: Prisma.SupportStaffFindManyArgs
  ): Promise<PrismaSupportStaff[]> {
    return this.prisma.supportStaff.findMany(args);
  }
  async supportStaff(
    args: Prisma.SupportStaffFindUniqueArgs
  ): Promise<PrismaSupportStaff | null> {
    return this.prisma.supportStaff.findUnique(args);
  }
  async createSupportStaff(
    args: Prisma.SupportStaffCreateArgs
  ): Promise<PrismaSupportStaff> {
    return this.prisma.supportStaff.create(args);
  }
  async updateSupportStaff(
    args: Prisma.SupportStaffUpdateArgs
  ): Promise<PrismaSupportStaff> {
    return this.prisma.supportStaff.update(args);
  }
  async deleteSupportStaff(
    args: Prisma.SupportStaffDeleteArgs
  ): Promise<PrismaSupportStaff> {
    return this.prisma.supportStaff.delete(args);
  }
}
