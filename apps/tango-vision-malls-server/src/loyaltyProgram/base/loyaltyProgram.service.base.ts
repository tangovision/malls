/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, LoyaltyProgram as PrismaLoyaltyProgram } from "@prisma/client";

export class LoyaltyProgramServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.LoyaltyProgramCountArgs, "select">
  ): Promise<number> {
    return this.prisma.loyaltyProgram.count(args);
  }

  async loyaltyPrograms(
    args: Prisma.LoyaltyProgramFindManyArgs
  ): Promise<PrismaLoyaltyProgram[]> {
    return this.prisma.loyaltyProgram.findMany(args);
  }
  async loyaltyProgram(
    args: Prisma.LoyaltyProgramFindUniqueArgs
  ): Promise<PrismaLoyaltyProgram | null> {
    return this.prisma.loyaltyProgram.findUnique(args);
  }
  async createLoyaltyProgram(
    args: Prisma.LoyaltyProgramCreateArgs
  ): Promise<PrismaLoyaltyProgram> {
    return this.prisma.loyaltyProgram.create(args);
  }
  async updateLoyaltyProgram(
    args: Prisma.LoyaltyProgramUpdateArgs
  ): Promise<PrismaLoyaltyProgram> {
    return this.prisma.loyaltyProgram.update(args);
  }
  async deleteLoyaltyProgram(
    args: Prisma.LoyaltyProgramDeleteArgs
  ): Promise<PrismaLoyaltyProgram> {
    return this.prisma.loyaltyProgram.delete(args);
  }
}
