/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
  IsDate,
  IsEnum,
  IsInt,
  Min,
  Max,
} from "class-validator";

import { ContactLogCreateNestedManyWithoutTenantsInput } from "./ContactLogCreateNestedManyWithoutTenantsInput";
import { Type } from "class-transformer";
import { LeaseAgreementCreateNestedManyWithoutTenantsInput } from "./LeaseAgreementCreateNestedManyWithoutTenantsInput";
import { MaintenanceRequestCreateNestedManyWithoutTenantsInput } from "./MaintenanceRequestCreateNestedManyWithoutTenantsInput";
import { PaymentCreateNestedManyWithoutTenantsInput } from "./PaymentCreateNestedManyWithoutTenantsInput";
import { EnumTenantStatus } from "./EnumTenantStatus";

@InputType()
class TenantCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  businessType?: string | null;

  @ApiProperty({
    required: false,
    type: () => ContactLogCreateNestedManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => ContactLogCreateNestedManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => ContactLogCreateNestedManyWithoutTenantsInput, {
    nullable: true,
  })
  contactLogs?: ContactLogCreateNestedManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  contactNumber?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  contactPerson?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: () => LeaseAgreementCreateNestedManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => LeaseAgreementCreateNestedManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => LeaseAgreementCreateNestedManyWithoutTenantsInput, {
    nullable: true,
  })
  leaseAgreements?: LeaseAgreementCreateNestedManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    type: () => MaintenanceRequestCreateNestedManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => MaintenanceRequestCreateNestedManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => MaintenanceRequestCreateNestedManyWithoutTenantsInput, {
    nullable: true,
  })
  maintenanceRequests?: MaintenanceRequestCreateNestedManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  moveInDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => PaymentCreateNestedManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => PaymentCreateNestedManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => PaymentCreateNestedManyWithoutTenantsInput, {
    nullable: true,
  })
  payments?: PaymentCreateNestedManyWithoutTenantsInput;

  @ApiProperty({
    required: false,
    enum: EnumTenantStatus,
  })
  @IsEnum(EnumTenantStatus)
  @IsOptional()
  @Field(() => EnumTenantStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  tenantId?: number | null;
}

export { TenantCreateInput as TenantCreateInput };
