/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  MaintenanceRequest as PrismaMaintenanceRequest,
  Space as PrismaSpace,
  Tenant as PrismaTenant,
} from "@prisma/client";

export class MaintenanceRequestServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MaintenanceRequestCountArgs, "select">
  ): Promise<number> {
    return this.prisma.maintenanceRequest.count(args);
  }

  async maintenanceRequests(
    args: Prisma.MaintenanceRequestFindManyArgs
  ): Promise<PrismaMaintenanceRequest[]> {
    return this.prisma.maintenanceRequest.findMany(args);
  }
  async maintenanceRequest(
    args: Prisma.MaintenanceRequestFindUniqueArgs
  ): Promise<PrismaMaintenanceRequest | null> {
    return this.prisma.maintenanceRequest.findUnique(args);
  }
  async createMaintenanceRequest(
    args: Prisma.MaintenanceRequestCreateArgs
  ): Promise<PrismaMaintenanceRequest> {
    return this.prisma.maintenanceRequest.create(args);
  }
  async updateMaintenanceRequest(
    args: Prisma.MaintenanceRequestUpdateArgs
  ): Promise<PrismaMaintenanceRequest> {
    return this.prisma.maintenanceRequest.update(args);
  }
  async deleteMaintenanceRequest(
    args: Prisma.MaintenanceRequestDeleteArgs
  ): Promise<PrismaMaintenanceRequest> {
    return this.prisma.maintenanceRequest.delete(args);
  }

  async getSpace(parentId: string): Promise<PrismaSpace | null> {
    return this.prisma.maintenanceRequest
      .findUnique({
        where: { id: parentId },
      })
      .space();
  }

  async getTenant(parentId: string): Promise<PrismaTenant | null> {
    return this.prisma.maintenanceRequest
      .findUnique({
        where: { id: parentId },
      })
      .tenant();
  }
}
