/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Advertisement as PrismaAdvertisement } from "@prisma/client";

export class AdvertisementServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AdvertisementCountArgs, "select">
  ): Promise<number> {
    return this.prisma.advertisement.count(args);
  }

  async advertisements(
    args: Prisma.AdvertisementFindManyArgs
  ): Promise<PrismaAdvertisement[]> {
    return this.prisma.advertisement.findMany(args);
  }
  async advertisement(
    args: Prisma.AdvertisementFindUniqueArgs
  ): Promise<PrismaAdvertisement | null> {
    return this.prisma.advertisement.findUnique(args);
  }
  async createAdvertisement(
    args: Prisma.AdvertisementCreateArgs
  ): Promise<PrismaAdvertisement> {
    return this.prisma.advertisement.create(args);
  }
  async updateAdvertisement(
    args: Prisma.AdvertisementUpdateArgs
  ): Promise<PrismaAdvertisement> {
    return this.prisma.advertisement.update(args);
  }
  async deleteAdvertisement(
    args: Prisma.AdvertisementDeleteArgs
  ): Promise<PrismaAdvertisement> {
    return this.prisma.advertisement.delete(args);
  }
}
